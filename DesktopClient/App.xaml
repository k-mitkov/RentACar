<Application
    x:Class="DesktopClient.App"
    xmlns="http://schemas.microsoft.com/winfx/2006/xaml/presentation"
    xmlns:x="http://schemas.microsoft.com/winfx/2006/xaml"
    xmlns:local="clr-namespace:DesktopClient"
    xmlns:util="clr-namespace:DesktopClient.Util"
    xmlns:viewmodels="clr-namespace:DesktopClient.ViewModels"
    xmlns:views="clr-namespace:DesktopClient.Views"
    StartupUri="Views/MainWindow.xaml">
    <Application.Resources>
        <ResourceDictionary>

            <viewmodels:MainViewModel x:Key="MainViewModel" />

            <DataTemplate DataType="{x:Type viewmodels:SearchViewModel}">
                <views:SearchView />
            </DataTemplate>

            <DataTemplate DataType="{x:Type viewmodels:SelectViewModel}">
                <views:SelectView />
            </DataTemplate>

            <DataTemplate DataType="{x:Type viewmodels:ViewCarsViewModel}">
                <views:SelectView />
            </DataTemplate>

            <DataTemplate DataType="{x:Type viewmodels:SelectedCarViewModel}">
                <views:SelectedCarView />
            </DataTemplate>

            <DataTemplate DataType="{x:Type viewmodels:ClientDataViewModel}">
                <views:ClientDataView />
            </DataTemplate>

            <DataTemplate DataType="{x:Type viewmodels:SuccesfulReservedViewModel}">
                <views:SuccesfulReservedView />
            </DataTemplate>

            <DataTemplate DataType="{x:Type viewmodels:CarsNotFoundViewModel}">
                <views:CarsNotFoundView />
            </DataTemplate>

            <DataTemplate DataType="{x:Type viewmodels:AddNewCarViewModel}">
                <views:AddNewCarView />
            </DataTemplate>

            <DataTemplate DataType="{x:Type viewmodels:AdminHomeViewModel}">
                <views:AdminHomeView/>
            </DataTemplate>

            <DataTemplate DataType="{x:Type viewmodels:LoginViewModel}">
                <views:LoginView/>
            </DataTemplate>

            <DataTemplate DataType="{x:Type viewmodels:CarViewModel}">
                <views:CarView/>
            </DataTemplate>

            <Style x:Key="Button" TargetType="{x:Type Button}">
                <Setter Property="Template">
                    <Setter.Value>
                        <ControlTemplate TargetType="Button">
                            <Border
                                x:Name="border"
                                Background="#fcc603"
                                BorderThickness="0"
                                TextBlock.Foreground="Black">
                                <Grid>
                                    <Image
                                        x:Name="buttonImage"
                                        Margin="40,10,40,30"
                                        Source="{Binding IconPath}"
                                        Stretch="Fill" />
                                    <Label
                                        x:Name="label"
                                        HorizontalAlignment="Center"
                                        VerticalAlignment="Bottom"
                                        Content="{Binding Name}"
                                        FontSize="15" />
                                    <ContentPresenter
                                        Margin="{TemplateBinding Padding}"
                                        HorizontalAlignment="Center"
                                        VerticalAlignment="Center" />
                                </Grid>
                            </Border>
                            <ControlTemplate.Triggers>
                                <!--  NB This changes the Border above with name style of [border]  -->
                                <DataTrigger Binding="{Binding IsSelected}" Value="true">
                                    <Setter TargetName="border" Property="Background" Value="#fcd303" />
                                    <Setter TargetName="buttonImage" Property="Source" Value="{Binding IconPathBlue}" />
                                </DataTrigger>
                                <MultiDataTrigger>
                                    <MultiDataTrigger.Conditions>
                                        <Condition Binding="{Binding RelativeSource={RelativeSource Mode=Self}, Path=IsMouseOver}" Value="True" />
                                        <Condition Binding="{Binding IsSelected}" Value="true" />
                                    </MultiDataTrigger.Conditions>
                                    <Setter TargetName="border" Property="Background" Value="#fcd303" />
                                    <Setter TargetName="buttonImage" Property="Source" Value="{Binding IconPathBlue}" />
                                    <Setter TargetName="buttonImage" Property="Margin" Value="40,20,40,20" />
                                </MultiDataTrigger>
                                <MultiDataTrigger>
                                    <MultiDataTrigger.Conditions>
                                        <Condition Binding="{Binding RelativeSource={RelativeSource Mode=Self}, Path=IsMouseOver}" Value="True" />
                                        <Condition Binding="{Binding IsSelected}" Value="false" />
                                    </MultiDataTrigger.Conditions>
                                    <Setter TargetName="label" Property="Content" Value="" />
                                    <Setter TargetName="border" Property="Background" Value="#fcd303" />
                                    <Setter TargetName="buttonImage" Property="Source" Value="{Binding IconPathBlue}" />
                                    <Setter TargetName="buttonImage" Property="Margin" Value="40,20,40,20" />
                                </MultiDataTrigger>
                            </ControlTemplate.Triggers>
                        </ControlTemplate>
                    </Setter.Value>
                </Setter>
            </Style>

            <Style TargetType="{x:Type DatePickerTextBox}">
                <Setter Property="Foreground" Value="{DynamicResource {x:Static SystemColors.WindowTextBrushKey}}" />
                <Setter Property="Background" Value="{DynamicResource {x:Static SystemColors.WindowBrushKey}}" />
                <Setter Property="ScrollViewer.PanningMode" Value="VerticalFirst" />
                <Setter Property="Stylus.IsFlicksEnabled" Value="False" />
                <Setter Property="Template">
                    <Setter.Value>
                        <ControlTemplate TargetType="DatePickerTextBox">
                            <Grid>
                                <Grid.Resources>
                                    <SolidColorBrush x:Key="WatermarkBrush" Color="#FFAAAAAA" />
                                </Grid.Resources>
                                <Border
                                    x:Name="Border"
                                    Padding="{TemplateBinding Padding}"
                                    Background="{TemplateBinding Background}"
                                    BorderBrush="{TemplateBinding BorderBrush}"
                                    BorderThickness="{TemplateBinding BorderThickness}"
                                    CornerRadius="1"
                                    Opacity="1">
                                    <Grid
                                        x:Name="WatermarkContent"
                                        HorizontalAlignment="{TemplateBinding HorizontalContentAlignment}"
                                        VerticalAlignment="{TemplateBinding VerticalContentAlignment}">
                                        <Border x:Name="ContentElement" BorderThickness="1">
                                            <Border.BorderBrush>
                                                <SolidColorBrush Color="#FFFFFFFF" />
                                            </Border.BorderBrush>
                                        </Border>
                                        <Border x:Name="watermark_decorator" BorderThickness="1">
                                            <Border.BorderBrush>
                                                <SolidColorBrush Color="#FFFFFFFF" />
                                            </Border.BorderBrush>
                                            <ContentControl
                                                x:Name="PART_Watermark"
                                                Padding="2"
                                                Focusable="False"
                                                IsHitTestVisible="False"
                                                Opacity="0">
                                                <ContentControl.Template>
                                                    <ControlTemplate>
                                                        <TextBlock VerticalAlignment="Center" Text="{util:Localization strSelectDate}" />
                                                    </ControlTemplate>
                                                </ContentControl.Template>
                                            </ContentControl>
                                        </Border>
                                        <ScrollViewer
                                            x:Name="PART_ContentHost"
                                            Margin="0"
                                            HorizontalContentAlignment="{TemplateBinding HorizontalContentAlignment}"
                                            VerticalContentAlignment="{TemplateBinding VerticalContentAlignment}" />
                                        <Border
                                            x:Name="FocusVisual"
                                            BorderBrush="#FF45D6FA"
                                            CornerRadius="1"
                                            IsHitTestVisible="False"
                                            Opacity="0" />
                                    </Grid>
                                </Border>
                                <VisualStateManager.VisualStateGroups>
                                    <VisualStateGroup Name="CommonStates">
                                        <VisualStateGroup.Transitions>
                                            <VisualTransition GeneratedDuration="0" />
                                            <VisualTransition GeneratedDuration="0:0:0.1" To="MouseOver" />
                                        </VisualStateGroup.Transitions>
                                        <VisualState Name="Normal" />
                                        <VisualState Name="MouseOver">
                                            <Storyboard>
                                                <ColorAnimation
                                                    Storyboard.TargetName="ContentElement"
                                                    Storyboard.TargetProperty="(Border.BorderBrush).(SolidColorBrush.Color)"
                                                    To="#FF99C1E2"
                                                    Duration="0" />
                                                <ColorAnimation
                                                    Storyboard.TargetName="watermark_decorator"
                                                    Storyboard.TargetProperty="(Border.BorderBrush).(SolidColorBrush.Color)"
                                                    To="#FF99C1E2"
                                                    Duration="0" />
                                            </Storyboard>
                                        </VisualState>
                                    </VisualStateGroup>
                                    <VisualStateGroup Name="WatermarkStates">
                                        <VisualStateGroup.Transitions>
                                            <VisualTransition GeneratedDuration="0" />
                                        </VisualStateGroup.Transitions>
                                        <VisualState Name="Unwatermarked" />
                                        <VisualState Name="Watermarked">
                                            <Storyboard>
                                                <DoubleAnimation
                                                    Storyboard.TargetName="ContentElement"
                                                    Storyboard.TargetProperty="Opacity"
                                                    To="0"
                                                    Duration="0" />
                                                <DoubleAnimation
                                                    Storyboard.TargetName="PART_Watermark"
                                                    Storyboard.TargetProperty="Opacity"
                                                    To="1"
                                                    Duration="0" />
                                            </Storyboard>
                                        </VisualState>
                                    </VisualStateGroup>
                                    <VisualStateGroup Name="FocusStates">
                                        <VisualStateGroup.Transitions>
                                            <VisualTransition GeneratedDuration="0" />
                                        </VisualStateGroup.Transitions>
                                        <VisualState Name="Unfocused" />
                                        <VisualState Name="Focused">
                                            <Storyboard>
                                                <DoubleAnimation
                                                    Storyboard.TargetName="FocusVisual"
                                                    Storyboard.TargetProperty="Opacity"
                                                    To="1"
                                                    Duration="0" />
                                            </Storyboard>
                                        </VisualState>
                                    </VisualStateGroup>
                                </VisualStateManager.VisualStateGroups>
                            </Grid>
                        </ControlTemplate>
                    </Setter.Value>
                </Setter>
            </Style>

            <Style x:Key="DatePickerIconResizingStyle" TargetType="{x:Type DatePicker}">
                <Setter Property="Foreground" Value="#FF333333" />
                <Setter Property="IsTodayHighlighted" Value="True" />
                <Setter Property="SelectedDateFormat" Value="Short" />
                <Setter Property="Background" Value="Transparent" />
                <Setter Property="Padding" Value="2" />
                <Setter Property="BorderBrush">
                    <Setter.Value>
                        <LinearGradientBrush StartPoint=".5,1" EndPoint=".5,0">
                            <GradientStop Offset="0" Color="#FFA3AEB9" />
                            <GradientStop Offset="0.375" Color="#FF8399A9" />
                            <GradientStop Offset="0.375" Color="#FF718597" />
                            <GradientStop Offset="1" Color="#FF617584" />
                        </LinearGradientBrush>
                    </Setter.Value>
                </Setter>
                <Setter Property="BorderThickness" Value="0" />
                <Setter Property="HorizontalContentAlignment" Value="Stretch" />
                <Setter Property="Template">
                    <Setter.Value>
                        <ControlTemplate TargetType="{x:Type DatePicker}">
                            <Border
                                Padding="{TemplateBinding Padding}"
                                Background="{TemplateBinding Background}"
                                BorderBrush="{TemplateBinding BorderBrush}"
                                BorderThickness="{TemplateBinding BorderThickness}">
                                <Grid
                                    x:Name="PART_Root"
                                    HorizontalAlignment="{TemplateBinding HorizontalContentAlignment}"
                                    VerticalAlignment="{TemplateBinding VerticalContentAlignment}">
                                    <Grid.Resources>
                                        <SolidColorBrush x:Key="DisabledBrush" Color="#A5FFFFFF" />
                                        <ControlTemplate x:Key="DropDownButtonTemplate" TargetType="{x:Type Button}">
                                            <Grid>
                                                <VisualStateManager.VisualStateGroups>
                                                    <VisualStateGroup x:Name="CommonStates">
                                                        <VisualStateGroup.Transitions>
                                                            <VisualTransition GeneratedDuration="0" />
                                                            <VisualTransition GeneratedDuration="0:0:0.1" To="MouseOver" />
                                                            <VisualTransition GeneratedDuration="0:0:0.1" To="Pressed" />
                                                        </VisualStateGroup.Transitions>
                                                        <VisualState x:Name="Normal" />
                                                        <VisualState x:Name="MouseOver">
                                                            <Storyboard>
                                                                <ColorAnimation
                                                                    Storyboard.TargetName="Background"
                                                                    Storyboard.TargetProperty="(Border.Background).(SolidColorBrush.Color)"
                                                                    To="#FF448DCA"
                                                                    Duration="0" />
                                                                <ColorAnimationUsingKeyFrames
                                                                    BeginTime="0"
                                                                    Storyboard.TargetName="BackgroundGradient"
                                                                    Storyboard.TargetProperty="(Border.Background).(GradientBrush.GradientStops)[3].(GradientStop.Color)"
                                                                    Duration="00:00:00.001">
                                                                    <SplineColorKeyFrame KeyTime="0" Value="#7FFFFFFF" />
                                                                </ColorAnimationUsingKeyFrames>
                                                                <ColorAnimationUsingKeyFrames
                                                                    BeginTime="0"
                                                                    Storyboard.TargetName="BackgroundGradient"
                                                                    Storyboard.TargetProperty="(Border.Background).(GradientBrush.GradientStops)[2].(GradientStop.Color)"
                                                                    Duration="00:00:00.001">
                                                                    <SplineColorKeyFrame KeyTime="0" Value="#CCFFFFFF" />
                                                                </ColorAnimationUsingKeyFrames>
                                                                <ColorAnimationUsingKeyFrames
                                                                    BeginTime="0"
                                                                    Storyboard.TargetName="BackgroundGradient"
                                                                    Storyboard.TargetProperty="(Border.Background).(GradientBrush.GradientStops)[1].(GradientStop.Color)"
                                                                    Duration="00:00:00.001">
                                                                    <SplineColorKeyFrame KeyTime="0" Value="#F2FFFFFF" />
                                                                </ColorAnimationUsingKeyFrames>
                                                            </Storyboard>
                                                        </VisualState>
                                                        <VisualState x:Name="Pressed">
                                                            <Storyboard>
                                                                <ColorAnimationUsingKeyFrames
                                                                    BeginTime="0"
                                                                    Storyboard.TargetName="Background"
                                                                    Storyboard.TargetProperty="(Border.Background).(SolidColorBrush.Color)"
                                                                    Duration="00:00:00.001">
                                                                    <SplineColorKeyFrame KeyTime="0" Value="#FF448DCA" />
                                                                </ColorAnimationUsingKeyFrames>
                                                                <DoubleAnimationUsingKeyFrames
                                                                    BeginTime="0"
                                                                    Storyboard.TargetName="Highlight"
                                                                    Storyboard.TargetProperty="(UIElement.Opacity)"
                                                                    Duration="00:00:00.001">
                                                                    <SplineDoubleKeyFrame KeyTime="0" Value="1" />
                                                                </DoubleAnimationUsingKeyFrames>
                                                                <ColorAnimationUsingKeyFrames
                                                                    BeginTime="0"
                                                                    Storyboard.TargetName="BackgroundGradient"
                                                                    Storyboard.TargetProperty="(Border.Background).(GradientBrush.GradientStops)[1].(GradientStop.Color)"
                                                                    Duration="00:00:00.001">
                                                                    <SplineColorKeyFrame KeyTime="0" Value="#EAFFFFFF" />
                                                                </ColorAnimationUsingKeyFrames>
                                                                <ColorAnimationUsingKeyFrames
                                                                    BeginTime="0"
                                                                    Storyboard.TargetName="BackgroundGradient"
                                                                    Storyboard.TargetProperty="(Border.Background).(GradientBrush.GradientStops)[2].(GradientStop.Color)"
                                                                    Duration="00:00:00.001">
                                                                    <SplineColorKeyFrame KeyTime="0" Value="#C6FFFFFF" />
                                                                </ColorAnimationUsingKeyFrames>
                                                                <ColorAnimationUsingKeyFrames
                                                                    BeginTime="0"
                                                                    Storyboard.TargetName="BackgroundGradient"
                                                                    Storyboard.TargetProperty="(Border.Background).(GradientBrush.GradientStops)[3].(GradientStop.Color)"
                                                                    Duration="00:00:00.001">
                                                                    <SplineColorKeyFrame KeyTime="0" Value="#6BFFFFFF" />
                                                                </ColorAnimationUsingKeyFrames>
                                                                <ColorAnimationUsingKeyFrames
                                                                    BeginTime="0"
                                                                    Storyboard.TargetName="BackgroundGradient"
                                                                    Storyboard.TargetProperty="(Border.Background).(GradientBrush.GradientStops)[0].(GradientStop.Color)"
                                                                    Duration="00:00:00.001">
                                                                    <SplineColorKeyFrame KeyTime="0" Value="#F4FFFFFF" />
                                                                </ColorAnimationUsingKeyFrames>
                                                            </Storyboard>
                                                        </VisualState>
                                                        <VisualState x:Name="Disabled" />
                                                    </VisualStateGroup>
                                                </VisualStateManager.VisualStateGroups>
                                                <Grid
                                                    Width="19"
                                                    Height="18"
                                                    Margin="0"
                                                    HorizontalAlignment="Center"
                                                    VerticalAlignment="Center"
                                                    Background="#11FFFFFF"
                                                    FlowDirection="LeftToRight">
                                                    <Grid.ColumnDefinitions>
                                                        <ColumnDefinition Width="20*" />
                                                        <ColumnDefinition Width="20*" />
                                                        <ColumnDefinition Width="20*" />
                                                        <ColumnDefinition Width="20*" />
                                                    </Grid.ColumnDefinitions>
                                                    <Grid.RowDefinitions>
                                                        <RowDefinition Height="23*" />
                                                        <RowDefinition Height="19*" />
                                                        <RowDefinition Height="19*" />
                                                        <RowDefinition Height="19*" />
                                                    </Grid.RowDefinitions>
                                                    <Border
                                                        x:Name="Highlight"
                                                        Grid.Row="0"
                                                        Grid.RowSpan="4"
                                                        Grid.ColumnSpan="4"
                                                        Margin="-1"
                                                        BorderBrush="#FF45D6FA"
                                                        BorderThickness="1"
                                                        CornerRadius="0,0,1,1"
                                                        Opacity="0" />
                                                    <Border
                                                        x:Name="Background"
                                                        Grid.Row="1"
                                                        Grid.RowSpan="3"
                                                        Grid.ColumnSpan="4"
                                                        Margin="0,-1,0,0"
                                                        Background="#FF1F3B53"
                                                        BorderBrush="#FFFFFFFF"
                                                        BorderThickness="1"
                                                        CornerRadius=".5"
                                                        Opacity="1" />
                                                    <Border
                                                        x:Name="BackgroundGradient"
                                                        Grid.Row="1"
                                                        Grid.RowSpan="3"
                                                        Grid.ColumnSpan="4"
                                                        Margin="0,-1,0,0"
                                                        BorderBrush="#BF000000"
                                                        BorderThickness="1"
                                                        CornerRadius=".5"
                                                        Opacity="1">
                                                        <Border.Background>
                                                            <LinearGradientBrush StartPoint=".7,0" EndPoint=".7,1">
                                                                <GradientStop Offset="0" Color="#FFFFFFFF" />
                                                                <GradientStop Offset="0.375" Color="#F9FFFFFF" />
                                                                <GradientStop Offset="0.625" Color="#E5FFFFFF" />
                                                                <GradientStop Offset="1" Color="#C6FFFFFF" />
                                                            </LinearGradientBrush>
                                                        </Border.Background>
                                                    </Border>
                                                    <Rectangle
                                                        Grid.RowSpan="1"
                                                        Grid.ColumnSpan="4"
                                                        StrokeThickness="1">
                                                        <Rectangle.Fill>
                                                            <LinearGradientBrush StartPoint="0.46,1.6" EndPoint="0.3,-1.1">
                                                                <GradientStop Color="#FF4084BD" />
                                                                <GradientStop Offset="1" Color="#FFAFCFEA" />
                                                            </LinearGradientBrush>
                                                        </Rectangle.Fill>
                                                        <Rectangle.Stroke>
                                                            <LinearGradientBrush StartPoint="0.48,1.25" EndPoint="0.48,-1">
                                                                <GradientStop Color="#FF494949" />
                                                                <GradientStop Offset="1" Color="#FF9F9F9F" />
                                                            </LinearGradientBrush>
                                                        </Rectangle.Stroke>
                                                    </Rectangle>
                                                    <Path
                                                        Grid.Row="1"
                                                        Grid.RowSpan="3"
                                                        Grid.Column="0"
                                                        Grid.ColumnSpan="4"
                                                        Margin="4,3,4,3"
                                                        HorizontalAlignment="Center"
                                                        VerticalAlignment="Center"
                                                        Data="M11.426758,8.4305077 L11.749023,8.4305077 L11.749023,16.331387 L10.674805,16.331387 L10.674805,10.299648 L9.0742188,11.298672 L9.0742188,10.294277 C9.4788408,10.090176 9.9094238,9.8090878 10.365967,9.4510155 C10.82251,9.0929432 11.176106,8.7527733 11.426758,8.4305077 z M14.65086,8.4305077 L18.566387,8.4305077 L18.566387,9.3435936 L15.671368,9.3435936 L15.671368,11.255703 C15.936341,11.058764 16.27293,10.960293 16.681133,10.960293 C17.411602,10.960293 17.969301,11.178717 18.354229,11.615566 C18.739157,12.052416 18.931622,12.673672 18.931622,13.479336 C18.931622,15.452317 18.052553,16.438808 16.294415,16.438808 C15.560365,16.438808 14.951641,16.234707 14.468243,15.826504 L14.881817,14.929531 C15.368796,15.326992 15.837872,15.525723 16.289043,15.525723 C17.298809,15.525723 17.803692,14.895514 17.803692,13.635098 C17.803692,12.460618 17.305971,11.873379 16.310528,11.873379 C15.83071,11.873379 15.399232,12.079271 15.016094,12.491055 L14.65086,12.238613 z"
                                                        Fill="#FF2F2F2F"
                                                        RenderTransformOrigin="0.5,0.5"
                                                        Stretch="Fill" />
                                                    <Ellipse
                                                        Grid.ColumnSpan="4"
                                                        Width="3"
                                                        Height="3"
                                                        HorizontalAlignment="Center"
                                                        VerticalAlignment="Center"
                                                        Fill="#FFFFFFFF"
                                                        StrokeThickness="0" />
                                                    <Border
                                                        x:Name="DisabledVisual"
                                                        Grid.Row="0"
                                                        Grid.RowSpan="4"
                                                        Grid.ColumnSpan="4"
                                                        BorderBrush="#B2FFFFFF"
                                                        BorderThickness="1"
                                                        CornerRadius="0,0,.5,.5"
                                                        Opacity="0" />
                                                </Grid>
                                            </Grid>
                                        </ControlTemplate>
                                    </Grid.Resources>
                                    <Grid.ColumnDefinitions>
                                        <ColumnDefinition Width="*" />
                                        <ColumnDefinition Width="Auto" />
                                    </Grid.ColumnDefinitions>

                                    <!--  This ViewBox allows to resize the icon automatically to fill the full height of the DatePicker  -->
                                    <Viewbox
                                        Grid.Row="0"
                                        Grid.Column="1"
                                        Margin="3,0,3,0"
                                        HorizontalAlignment="Left"
                                        VerticalAlignment="Top">
                                        <Button
                                            x:Name="PART_Button"
                                            Focusable="False"
                                            Foreground="{TemplateBinding Foreground}"
                                            Template="{StaticResource DropDownButtonTemplate}" />
                                    </Viewbox>

                                    <DatePickerTextBox
                                        x:Name="PART_TextBox"
                                        Grid.Row="0"
                                        Grid.Column="0"
                                        HorizontalContentAlignment="Stretch"
                                        VerticalContentAlignment="Stretch"
                                        Focusable="{TemplateBinding Focusable}" />
                                    <Grid
                                        x:Name="PART_DisabledVisual"
                                        Grid.Row="0"
                                        Grid.Column="0"
                                        Grid.ColumnSpan="2"
                                        IsHitTestVisible="False"
                                        Opacity="0">
                                        <Grid.ColumnDefinitions>
                                            <ColumnDefinition Width="*" />
                                            <ColumnDefinition Width="Auto" />
                                        </Grid.ColumnDefinitions>
                                        <Rectangle
                                            Grid.Row="0"
                                            Grid.Column="0"
                                            Fill="#A5FFFFFF"
                                            RadiusX="1"
                                            RadiusY="1" />
                                        <Rectangle
                                            Grid.Row="0"
                                            Grid.Column="1"
                                            Width="19"
                                            Height="18"
                                            Margin="3,0,3,0"
                                            Fill="#A5FFFFFF"
                                            RadiusX="1"
                                            RadiusY="1" />
                                        <Popup
                                            x:Name="PART_Popup"
                                            AllowsTransparency="True"
                                            Placement="Bottom"
                                            PlacementTarget="{Binding ElementName=PART_TextBox}"
                                            StaysOpen="False" />
                                    </Grid>
                                </Grid>
                                <VisualStateManager.VisualStateGroups>
                                    <VisualStateGroup x:Name="CommonStates">
                                        <VisualState x:Name="Normal" />
                                        <VisualState x:Name="Disabled">
                                            <Storyboard>
                                                <DoubleAnimation
                                                    Storyboard.TargetName="PART_DisabledVisual"
                                                    Storyboard.TargetProperty="Opacity"
                                                    To="1"
                                                    Duration="0" />
                                            </Storyboard>
                                        </VisualState>
                                    </VisualStateGroup>
                                </VisualStateManager.VisualStateGroups>
                            </Border>
                            <ControlTemplate.Triggers>
                                <DataTrigger Binding="{Binding Source={x:Static SystemParameters.HighContrast}}" Value="false">
                                    <Setter TargetName="PART_TextBox" Property="Foreground" Value="{Binding Foreground, RelativeSource={RelativeSource TemplatedParent}}" />
                                </DataTrigger>
                            </ControlTemplate.Triggers>
                        </ControlTemplate>
                    </Setter.Value>
                </Setter>
            </Style>

            <Style x:Key="InvalidMail" TargetType="TextBlock">
                <Setter Property="Text" Value="{util:Localization strInvalidMail}" />
                <Style.Triggers>
                    <DataTrigger Binding="{Binding Path=IsMailValid}" Value="true">
                        <Setter Property="Text" Value="" />
                    </DataTrigger>
                </Style.Triggers>
            </Style>

            <Style x:Key="InvalidName" TargetType="TextBlock">
                <Setter Property="Text" Value="{util:Localization strInvalidName}" />
                <Style.Triggers>
                    <DataTrigger Binding="{Binding Path=IsNameValid}" Value="true">
                        <Setter Property="Text" Value="" />
                    </DataTrigger>
                </Style.Triggers>
            </Style>

            <Style x:Key="InvalidLastName" TargetType="TextBlock">
                <Setter Property="Text" Value="{util:Localization strInvalidLastName}" />
                <Style.Triggers>
                    <DataTrigger Binding="{Binding Path=IsLastNameValid}" Value="true">
                        <Setter Property="Text" Value="" />
                    </DataTrigger>
                </Style.Triggers>
            </Style>

            <Style x:Key="InvalidPhone" TargetType="TextBlock">
                <Setter Property="Text" Value="{util:Localization strInvalidPhone}" />
                <Style.Triggers>
                    <DataTrigger Binding="{Binding Path=IsPhoneValid}" Value="true">
                        <Setter Property="Text" Value="" />
                    </DataTrigger>
                </Style.Triggers>
            </Style>

            <Style x:Key="InvalidDateOfBirth" TargetType="TextBlock">
                <Setter Property="Text" Value="{util:Localization strInvalidDateOfBirth}" />
                <Style.Triggers>
                    <DataTrigger Binding="{Binding Path=IsDateOfBirthValid}" Value="true">
                        <Setter Property="Text" Value="" />
                    </DataTrigger>
                </Style.Triggers>
            </Style>

            <Style x:Key="InvalidBrand" TargetType="TextBlock">
                <Setter Property="Text" Value="{util:Localization strInvalidBrand}" />
                <Style.Triggers>
                    <DataTrigger Binding="{Binding Path=IsBrandValid}" Value="true">
                        <Setter Property="Text" Value="" />
                    </DataTrigger>
                </Style.Triggers>
            </Style>

            <Style x:Key="InvalidModel" TargetType="TextBlock">
                <Setter Property="Text" Value="{util:Localization strInvalidModel}" />
                <Style.Triggers>
                    <DataTrigger Binding="{Binding Path=IsModelValid}" Value="true">
                        <Setter Property="Text" Value="" />
                    </DataTrigger>
                </Style.Triggers>
            </Style>

            <Style x:Key="InvalidYear" TargetType="TextBlock">
                <Setter Property="Text" Value="{util:Localization strInvalidYear}" />
                <Style.Triggers>
                    <DataTrigger Binding="{Binding Path=IsYearValid}" Value="true">
                        <Setter Property="Text" Value="" />
                    </DataTrigger>
                </Style.Triggers>
            </Style>

            <Style x:Key="InvalidConsumation" TargetType="TextBlock">
                <Setter Property="Text" Value="{util:Localization strInvalidConsumation}" />
                <Style.Triggers>
                    <DataTrigger Binding="{Binding Path=IsConsumationValid}" Value="true">
                        <Setter Property="Text" Value="" />
                    </DataTrigger>
                </Style.Triggers>
            </Style>

            <Style x:Key="InvalidCapacity" TargetType="TextBlock">
                <Setter Property="Text" Value="{util:Localization strInvalidCapacity}" />
                <Style.Triggers>
                    <DataTrigger Binding="{Binding Path=IsCapacityValid}" Value="true">
                        <Setter Property="Text" Value="" />
                    </DataTrigger>
                </Style.Triggers>
            </Style>

            <Style x:Key="InvalidPath" TargetType="TextBlock">
                <Setter Property="Text" Value="{util:Localization strInvalidPath}" />
                <Style.Triggers>
                    <DataTrigger Binding="{Binding Path=IsPathValid}" Value="true">
                        <Setter Property="Text" Value="" />
                    </DataTrigger>
                </Style.Triggers>
            </Style>

            <Style x:Key="InvalidPricePerDay" TargetType="TextBlock">
                <Setter Property="Text" Value="{util:Localization strInvalidPrice}" />
                <Style.Triggers>
                    <DataTrigger Binding="{Binding Path=IsPriceValid}" Value="true">
                        <Setter Property="Text" Value="" />
                    </DataTrigger>
                </Style.Triggers>
            </Style>

            <Style x:Key="InvalidDates" TargetType="TextBlock">
                <Setter Property="Text" Value="" />
                <Style.Triggers>
                    <DataTrigger Binding="{Binding IsDateFromValid}" Value="false">
                        <Setter Property="Text" Value="{util:Localization strInvalidDateFrom}" />
                    </DataTrigger>
                    <MultiDataTrigger>
                        <MultiDataTrigger.Conditions>
                            <Condition Binding="{Binding IsDateFromValid}" Value="true" />
                            <Condition Binding="{Binding IsDateToAftarDateFrom}" Value="false" />
                        </MultiDataTrigger.Conditions>
                        <Setter Property="Text" Value="{util:Localization strInvalidDates}" />
                    </MultiDataTrigger>
                </Style.Triggers>
            </Style>

            <Style x:Key="SelectedImage" TargetType="Image">
                <Setter Property="Source" Value="\Resources\Images\car_main.jpg" />
                <Style.Triggers>
                    <DataTrigger Binding="{Binding CarButton.IsSelected}" Value="true">
                        <Setter Property="Source" Value="\Resources\Images\car_main.jpg" />
                    </DataTrigger>
                    <DataTrigger Binding="{Binding ECarButton.IsSelected}" Value="true">
                        <Setter Property="Source" Value="\Resources\Images\ecar_main.jpg" />
                    </DataTrigger>
                    <DataTrigger Binding="{Binding TruckButton.IsSelected}" Value="true">
                        <Setter Property="Source" Value="\Resources\Images\cargo_main.jpg" />
                    </DataTrigger>
                </Style.Triggers>
            </Style>

            <Style x:Key="ButtonBorder" TargetType="Button">
                <Setter Property="BorderThickness" Value="0" />
                <Setter Property="Template">
                    <Setter.Value>
                        <ControlTemplate TargetType="Button">
                            <Border
                                x:Name="BBorder"
                                Background="#03a5fc"
                                BorderThickness="0"
                                TextBlock.Foreground="White">
                                <ContentPresenter HorizontalAlignment="Center" VerticalAlignment="Center" />
                            </Border>
                            <ControlTemplate.Triggers>
                                <Trigger Property="IsMouseOver" Value="True">
                                    <Trigger.Setters>
                                        <Setter TargetName="BBorder" Property="BorderThickness" Value="5" />
                                        <Setter TargetName="BBorder" Property="BorderBrush" Value="#fcd303" />
                                    </Trigger.Setters>
                                </Trigger>
                            </ControlTemplate.Triggers>
                        </ControlTemplate>
                    </Setter.Value>
                </Setter>
            </Style>
        </ResourceDictionary>
    </Application.Resources>
</Application>
